<?xml version="1.0" encoding="UTF-8"?>

 <beans xmlns="http://www.springframework.org/schema/beans"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:context="http://www.springframework.org/schema/context"
           xmlns:tx="http://www.springframework.org/schema/tx"
           xmlns:p="http://www.springframework.org/schema/p"
           xmlns:mvc="http://www.springframework.org/schema/mvc"
           xsi:schemaLocation="http://www.springframework.org/schema/beans 
                               http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                               http://www.springframework.org/schema/mvc
                               http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                               http://www.springframework.org/schema/context
                               http://www.springframework.org/schema/context/spring-context-3.1.xsd
                               http://www.springframework.org/schema/tx
                               http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <!-- Application Message Bundle -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/messages" />
        <property name="cacheSeconds" value="3000" />
    </bean>

	<!--  this attribute allow us to use annotations inside Controllers (@RequestMapping, @Autowired...) -->
    <!-- <context:component-scan base-package="com.portal" /> -->
    
    <!--  Spring also has to know that it has to scan for a particular package for controllers. -->
    <context:component-scan base-package="com.portal.controller">  
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>  
	</context:component-scan>
	
	<context:component-scan base-package="com.portal.model.dao, com.portal.model.domain, com.portal.model.service" />
    
    <!--  Enabling Annotation based Transaction Management using @Transactional -->
    <tx:annotation-driven />
    
	<!-- <mvc:resources mapping="/resources/**" location="/js/" /> -->
	
	


	

	<mvc:annotation-driven/>
	 
    <!-- Handles HTTP GET requests for /css/** by efficiently serving up static resources in the
         ${webappRoot}/css directory -->
    
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
    
	<mvc:resources mapping="/css/**" location="/res/css/" />
	<mvc:resources mapping="/images/**" location="/res/images/" />
	<mvc:resources mapping="/js/**" location="/res/js/" />
	<mvc:resources mapping="/bootstrap/**" location="/res/bootstrap/" />
	 
	
	<!-- 
  		This bean sets up the Velocity environment for us based on a root path for templates.
  		Optionally, a properties file can be specified for more control over the Velocity
  		environment, but the defaults are pretty sane for file based template loading.
	-->
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath">
            <value>/WEB-INF/</value>
        </property>
    </bean>
	
	<!-- 
  		View resolvers can also be configured with ResourceBundles or XML files. If you need
  		different view resolving based on Locale, you have to use the resource bundle resolver.
	-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="cache" value="false" />
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.velocity.VelocityView</value>
		</property> 
		<property name="prefix">
			<value>/view/</value>
		</property>
		<property name="suffix">
			<value>.vm</value>
		</property>
   		<!--if you want to use the Spring Velocity macros, set this property to true -->
		<property name="exposeSpringMacroHelpers">
			<value>false</value>
		</property>
		 
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />
		  
	</bean>    
	
	
		
</beans>